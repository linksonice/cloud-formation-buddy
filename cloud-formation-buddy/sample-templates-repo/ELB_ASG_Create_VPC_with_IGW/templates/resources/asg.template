	   "WebServerFleet" : {
	      "Type" : "AWS::AutoScaling::AutoScalingGroup",
	      "DependsOn" : "PublicRoute",
	      "Properties" : {
	        "AvailabilityZones" : [{ "Fn::GetAtt" : [ "PublicSubnet", "AvailabilityZone" ] }],
	        "VPCZoneIdentifier" : [{ "Ref" : "PublicSubnet" }],
	        "LaunchConfigurationName" : { "Ref" : "WebServerLaunchConfig"  },
	        "MinSize" : "${MinAutoScalingSize}",
	        "MaxSize" : "${MaxAutoScalingSize}",
	        "DesiredCapacity" : { "Ref" : "WebServerCount" },
	        "LoadBalancerNames" : [ { "Ref" : "PublicElasticLoadBalancer" } ],
	        "Tags" : [ { "Key" : "Network", "Value" : "Public", "PropagateAtLaunch" : "true" } ]
	      },
	      "CreationPolicy" : {
	        "ResourceSignal" : {
	          "Timeout" : "PT45M",
	          "Count"   : { "Ref" : "WebServerCount" }
	        }
	      },
	      "UpdatePolicy": {
	        "AutoScalingRollingUpdate": {
	          "MinInstancesInService": "1",
	          "MaxBatchSize": "1",
	          "PauseTime" : "PT15M",
	          "WaitOnResourceSignals": "true"
	        }
	      }
	    },
	
	    "WebServerLaunchConfig"  : {
	      "Type" : "AWS::AutoScaling::LaunchConfiguration",
	      "Metadata" : {
	        "AWS::CloudFormation::Init" : {
	          "config" : {
	            "packages" : {
	              "yum" : {
	                "httpd" : []
	              }
	            },
	
	            "files" : {
	              "/var/www/html/index.html" : {
	                "content" : { "Fn::Join" : ["\n", [
	                  "<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
	                ]]},
	                "mode"    : "000644",
	                "owner"   : "root",
	                "group"   : "root"
	              },
	              "/etc/cfn/cfn-hup.conf" : {
	                "content" : { "Fn::Join" : ["", [
	                  "[main]\n",
	                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
	                  "region=", { "Ref" : "AWS::Region" }, "\n"
	                ]]},
	                "mode"    : "000400",
	                "owner"   : "root",
	                "group"   : "root"
	              },
	
	              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
	                "content": { "Fn::Join" : ["", [
	                  "[cfn-auto-reloader-hook]\n",
	                  "triggers=post.update\n",
	                  "path=Resources.WebServerLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
	                  "action=/opt/aws/bin/cfn-init -v ",
	                  "         --stack ", { "Ref" : "AWS::StackName" },
	                  "         --resource WebServerLaunchConfig ",
	                  "         --region ", { "Ref" : "AWS::Region" }, "\n",
	                  "runas=root\n"
	                ]]}
	              }
	            },
	
	            "services" : {
	              "sysvinit" : {
	                "httpd" : { "enabled" : "true", "ensureRunning" : "true", 
	                              "files" : [ "/etc/httpd/conf.d/aptobackend.conf", "/var/www/html/index.html" ]},
	                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
	                              "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
	              }
	            }
	          }
	        }
	      },
	      "Properties" : {
	        "ImageId"        : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "WebServerInstanceType" }, "Arch" ] } ] },
	        "SecurityGroups" : [ { "Ref" : "${WebServerSecurityGroup}" } ],
	        "InstanceType"   : { "Ref" : "WebServerInstanceType" },
	        "KeyName"        : { "Ref" : "KeyName" },
	        "AssociatePublicIpAddress" : "true",
	        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
	          "#!/bin/bash -xe\n",
	          "yum update -y aws-cfn-bootstrap\n",
	
	          "# Install the sample application\n",
	          "/opt/aws/bin/cfn-init -v ",
	          "    --stack ", { "Ref" : "AWS::StackId" },
	          "    --resource WebServerLaunchConfig ",
	          "    --region ", { "Ref" : "AWS::Region" }, "\n",
	
	          "# Signal copletion\n",
	          "/opt/aws/bin/cfn-signal -e $? ",
	          "    --stack ", { "Ref" : "AWS::StackId" },
	          "    --resource WebServerFleet ",
	          "    --region ", { "Ref" : "AWS::Region" }, "\n"
	        ]]}}
	      }
	    },
	    <#include "/security/ec2_security_group.template">,
	    <#include "/security/bastion.template">
